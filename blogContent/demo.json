{"slug":"demo","delta":{"ops":[{"insert":"From Wikipedia, the free encyclopedia\n\"SaaS\" redirects here. Not to be confused with Security as a service.\nSoftware as a service (SaaS /sæs/[1]) is a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted.[2][3] SaaS is also known as on-demand software, web-based software, or web-hosted software.[4]\n\nSaaS is a business model specific to cloud computing, along with infrastructure as a service (IaaS) and platform as a service (PaaS).[5][6]\n\nSaaS apps are typically accessed by users of a web browser (a thin client). SaaS became a common delivery model for many business applications, including office software, messaging software, payroll processing software, DBMS software, management software, CAD software, development software, gamification, virtualization,[7] accounting, collaboration, customer relationship management (CRM), management information systems (MIS), enterprise resource planning (ERP), invoicing, field service management, human resource management (HRM), talent acquisition, learning management systems, content management (CM), geographic information systems (GIS), and service desk management.\n\nSaaS has been incorporated into the strategies of nearly all enterprise software companies.[8][9]\n\nHistory\nCentralized hosting of business applications dates back to the 1960s. Starting in that decade, IBM and other mainframe computer providers conducted a service bureau business, often referred to as time-sharing or utility computing. Such services included offering computing power and database storage to banks and other large organizations from their worldwide data centers.[10]\n\nThe expansion of the Internet during the 1990s brought about a new class of centralized computing, called application service providers (ASP). ASPs provided businesses with the service of hosting and managing specialized business applications to reduce costs through central administration and the provider's specialization in a particular business application. Two of the largest ASPs were USI, which was headquartered in the Washington, D.C., area, and Futurelink Corporation, headquartered in Irvine, California.[11]\n\nSoftware as a service essentially extends the idea of the ASP model. The term software as a service (SaaS), however, is commonly used in more specific settings:\n\nWhile most initial ASPs focused on managing and hosting third-party independent software vendors' software, contemporary[as of?] SaaS offerings are typically provided by the software developer.[12]\nWhereas many initial ASPs offered more traditional client-server applications, which require the installation of software on users' personal computers, later implementations can be Web applications that only require a web browser to use.[13]\nWhereas the software architecture used by most initial ASPs mandated maintaining a separate instance of the application for each business, SaaS services can utilize a multi-tenant architecture, in which the application serves multiple businesses and users, and partitions its data accordingly. [14]\nMicrosoft referred to SaaS as \"software plus services\" for a few years.[15]\n\nDistribution and pricing\nThe cloud (or SaaS) model has no physical need for indirect distribution because it is not distributed physically and is deployed almost instantaneously, thereby negating the need for traditional partners and middlemen. Unlike traditional software, which is conventionally sold as a perpetual license with an up-front cost (and an optional ongoing support fee), SaaS providers generally price applications using a subscription fee, most commonly a monthly fee or an annual fee.[16] Consequently, the initial setup cost for SaaS is typically lower than the equivalent enterprise software. SaaS vendors typically price their applications based on some usage parameters, such as the number of users using the application. However, because in a SaaS environment customers' data reside with the SaaS vendor, opportunities also exist to charge per transaction, event, or other units of value, such as the number of processors required.[17]\n\nThe relatively low cost for user provisioning (i.e., setting up a new customer) in a multi-tenant environment enables some SaaS vendors to offer applications using the freemium model.[17] In this model, a free service is made available with limited functionality or scope, and fees are charged for enhanced functionality or larger scope.[17]\n\nA key driver of SaaS growth is SaaS vendors' ability to provide a price that is competitive with on-premises software. This is consistent with the traditional rationale for outsourcing IT systems, which involves applying economies of scale to application operation, i.e., an outside service provider may be able to offer better, cheaper, more reliable applications.[18]\n\nArchitecture\nMost SaaS providers offer a multi-tenant architecture. With this model, a single version of the application, with a single configuration (hardware, network, operating system), is used for all customers (\"tenants\"). To support scalability, the application can be installed on multiple machines (called horizontal scaling). In some cases, a second version of the application is set up to offer a select group of customers access to pre-release versions of the applications (e.g., a beta version) for testing purposes. This is contrasted with traditional software, where multiple physical copies of the software — each potentially of a different version, with a potentially different configuration, and often customized — are installed across various customer sites.[19]\n\nAlthough an exception rather than the norm, some SaaS providers use mechanisms such as virtualization to manage a large number of customers in place of multitenancy.[20] Whether multitenancy is a necessary component of software as a service is debatable.[21]\n\nVertical vs horizontal SaaS\nHorizontal SaaS and vertical SaaS are different models of cloud computing services.[22] Horizontal SaaS targets a broad variety of customers, generally without regard to their industry. Some popular examples of horizontal SaaS vendors are Salesforce and HubSpot. Vertical SaaS, on the other hand, refers to a niche market targeting a narrower variety of customers to meet their specific requirements.[23]\n\nCharacteristics\nAlthough not all software-as-a-service applications share all the following traits, the characteristics below are common among many of them:\n\nAccelerated feature delivery\nSaaS applications are often updated more frequently than traditional software,[24] in many cases on a weekly or monthly basis. This is enabled by several factors:\n\nThe application is hosted centrally, so an update is decided and executed by the provider, not by customers.[citation needed]\nThe application only has a single configuration, making development testing faster.[citation needed]\nThe application vendor does not have to expend resources updating and maintaining backdated software versions because there is only one version.[citation needed]\nThe application vendor has access to all customer data, expediting design and regression testing.[citation needed]\nThe service provider has access to user behavior within the application (usually via web analytics), making it easier to identify areas worthy of improvement.[citation needed]\nAccelerated feature delivery is further enabled by agile software development methodologies.[25] Such methodologies, which evolved in the mid-1990s, provide a set of software development tools and practices to support frequent software releases.[citation needed]\n\nOpen integration protocols\nSaaS applications predominantly offer integration protocols and application programming interfaces (APIs) that operate over a wide area network.[26][better source needed][27]\n\nThe ubiquity of SaaS applications and other Internet services and the standardization of their API technology has spawned the development of mashups, which are lightweight applications that combine data, presentation, and functionality from multiple services, creating a compound service.[citation needed] Mashups further differentiate SaaS applications from on-premises software as the latter cannot be easily integrated outside a company's firewall.[original research?]\n\nCollaborative (and \"social\") functionality\nInspired by the development of different internet networking services and the so-called web 2.0 functionality, many SaaS applications offer features that let their users collaborate and share information.[citation needed]\n\nFor example, many project management applications delivered in the SaaS model offer—in addition to traditional project planning functionality—collaboration features letting users comment on tasks and plans and share documents within and outside an organization. Several other SaaS applications let users vote on and offer new feature ideas.[citation needed]\n\nAlthough some collaboration-related functionality is also integrated into on-premises software, (implicit or explicit) collaboration between users or different customers is only possible with centrally hosted software.[citation needed]\n\nOpenSaaS\nOpenSaaS refers to software as a service (SaaS) based on open-source code. Like SaaS applications, Open SaaS is a web-based application hosted, supported, and maintained by a service provider. While the roadmap for Open SaaS applications is defined by its community of users, upgrades and product enhancements are managed by a central provider. The term was coined in 2011 by Dries Buytaert, creator of the Drupal content management framework.[28]\n\nAndrew Hoppin, a former Chief Information Officer for the New York State Senate, has been a vocal advocate of OpenSaaS for government, calling it \"the future of government innovation.\" He points to WordPress and Why Unified as a successful example of an OpenSaaS software delivery model that gives customers \"the best of both worlds, and more options. The fact that it is open source means that they can start building their websites by self-hosting WordPress and customizing their website to their heart's content. Concurrently, the fact that WordPress is SaaS means that they don't have to manage the website at all -- they can simply pay WordPress.com to host it.\"[29]\n"}]}}
